apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}-anomaly-detector
  namespace: {{ .Values.network.namespace }}
  labels:
    app: {{ .Values.network.labels.app }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app: {{ .Values.network.labels.app }}
  template:
    metadata:
      labels:
        app: {{ .Values.network.labels.app }}
    spec:
      containers:
      - name: anomaly-detector
        image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
        ports:
        - containerPort: 8082
        env:
        - name: NETWORK
          value: "{{ .Values.env[0].value }}"
        - name: VAULT_ADDR
          value: "{{ .Values.env[1].value }}"
        - name: VAULT_TOKEN
          valueFrom:
            secretKeyRef:
              name: "{{ .Values.env[2].valueFrom.secretKeyRef.name }}"
              key: "{{ .Values.env[2].valueFrom.secretKeyRef.key }}"
        command: ["sh", "-c", "sleep 15 && ./anomaly-detector"]
        livenessProbe:
          httpGet:
            path: /health
            port: 8082
          initialDelaySeconds: 20
          periodSeconds: 10
